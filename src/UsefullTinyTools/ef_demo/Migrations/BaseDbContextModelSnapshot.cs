// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ef_demo;

namespace ef_demo.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ef_demo.ModelA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModelAs");
                });

            modelBuilder.Entity("ef_demo.ModelB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelAId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModelAId");

                    b.ToTable("ModelBs");
                });

            modelBuilder.Entity("ef_demo.ModelB", b =>
                {
                    b.HasOne("ef_demo.ModelA", "ModelA")
                        .WithMany("ModelBs")
                        .HasForeignKey("ModelAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelA");
                });

            modelBuilder.Entity("ef_demo.ModelA", b =>
                {
                    b.Navigation("ModelBs");
                });
#pragma warning restore 612, 618
        }
    }
}
